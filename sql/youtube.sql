DROP TABLE IF EXISTS post CASCADE;
DROP TABLE IF EXISTS video CASCADE;
DROP TABLE IF EXISTS postcomunidade CASCADE;
DROP TABLE IF EXISTS comentario CASCADE;
DROP TABLE IF EXISTS contacanal CASCADE;
DROP TABLE IF EXISTS playlist CASCADE;
DROP TABLE IF EXISTS playlistvideo CASCADE;
DROP TABLE IF EXISTS feed CASCADE;
DROP TABLE IF EXISTS anuncio CASCADE;
DROP TABLE IF EXISTS anunciocanal CASCADE;
DROP TABLE IF EXISTS contapremium CASCADE;
DROP TABLE IF EXISTS inscricoes CASCADE;

CREATE TABLE ContaCanal(
	ID SERIAL NOT NULL,
	Email VARCHAR(100) NOT NULL UNIQUE,
	Senha VARCHAR(30) NOT NULL,
	Kids BOOLEAN NOT NULL,
	NumeroVisualizacoes INT NOT NULL,
	NumeroInscritos INT NOT NULL,
	DataCriacao DATE NOT NULL,
	Nome VARCHAR(30) NOT NULL,
	PRIMARY KEY(ID)
);

CREATE TABLE ContaPremium(
	ID SERIAL NOT NULL,
	IDConta INT NOT NULL,
	ValidadeCartao DATE NOT NULL,
	NumeroCartao CHAR(16) NOT NULL,
	CodSeguranca CHAR(3) NOT NULL,
	CPFTitular CHAR(11) NOT NULL,
	NomeTitular VARCHAR(50) NOT NULL,
	PRIMARY KEY(ID),
	FOREIGN KEY(IDConta) REFERENCES ContaCanal(ID) ON DELETE CASCADE
);

CREATE TABLE Feed(
	IDCanal INT NOT NULL,
	IDVideo INT NOT NULL,
	PRIMARY KEY(IDCanal, IDVideo),
	FOREIGN KEY(IDCanal) REFERENCES ContaCanal(ID) ON DELETE CASCADE,
	FOREIGN KEY(IDVideo) REFERENCES ContaCanal(ID)	
);


CREATE TABLE Post(
	ID SERIAL NOT NULL,
	IDCanal INT NOT NULL,
	Likes INT NOT NULL,
	Dislikes INT NOT NULL,
	DataPublicacao DATE NOT NULL,
	PRIMARY KEY(ID),
	FOREIGN KEY(IDCanal) REFERENCES ContaCanal(ID) ON DELETE CASCADE
);

CREATE TABLE Inscricoes(
	IDFonte INT NOT NULL,
	IDDestino INT NOT NULL,
	PRIMARY KEY(IDFonte, IDDestino) ,
	FOREIGN KEY(IDFonte) REFERENCES ContaCanal(ID) ON DELETE CASCADE,
	FOREIGN KEY(IDDestino) REFERENCES ContaCanal(ID) ON DELETE CASCADE
);

CREATE TABLE Video(
	ID SERIAL NOT NULL,
	IDPost INT NOT NULL,
	Short BOOLEAN NOT NULL,
	Descricao VARCHAR(1000) NOT NULL,
	Resolucao CHAR(9) NOT NULL,
	Duracao INT NOT NULL,
	NumeroVisualizacoes INT NOT NULL,
	Titulo VARCHAR(30) NOT NULL,
	PRIMARY KEY(ID),
	FOREIGN KEY(IDPost) REFERENCES Post(ID) ON DELETE CASCADE
);

CREATE TABLE Comentario(
	ID SERIAL NOT NULL,
	IDPost INT NOT NULL,
	IDPostAlvo INT NOT NULL,
	Texto VARCHAR(100) NOT NULL,
	PRIMARY KEY(ID),
	FOREIGN KEY(IDPost) REFERENCES Post(ID) ON DELETE CASCADE,
	FOREIGN KEY(IDPostAlvo) REFERENCES Post(ID) ON DELETE CASCADE
);

CREATE TABLE PostComunidade(
	ID SERIAL NOT NULL,
	IDPost INT NOT NULL,
	Texto VARCHAR(1000) NOT NULL,
	Imagem BYTEA,
	PRIMARY KEY(ID),
	FOREIGN KEY(IDPost) REFERENCES Post(ID) ON DELETE CASCADE
);

CREATE TABLE Playlist(
	ID SERIAL NOT NULL,
	IDCanal INT NOT NULL,
	DataCriacao DATE NOT NULL,
	Nome VARCHAR(30) NOT NULL,
	PRIMARY KEY(ID),
	FOREIGN KEY(IDCanal) REFERENCES ContaCanal(ID) ON DELETE CASCADE
);

CREATE TABLE PlaylistVideo(
	IDPlaylist INT NOT NULL,
	IDVideo INT NOT NULL,
	PRIMARY KEY(IDPlaylist, IDVideo),
	FOREIGN KEY(IDPlaylist) REFERENCES Playlist(ID) ON DELETE CASCADE,
	FOREIGN KEY(IDVideo) REFERENCES Video(ID) ON DELETE CASCADE
);

CREATE TABLE Anuncio(
	ID SERIAL NOT NULL,
	CNPJ VARCHAR(14) NOT NULL,
	Conteudo BYTEA NOT NULL,
	Link VARCHAR(100) NOT NULL,
	Duracao INT NOT NULL,
	PRIMARY KEY(ID)
);

CREATE TABLE AnuncioCanal(
	IDAnuncio INT NOT NULL,
	IDCanal INT NOT NULL,
	Exibicoes INT NOT NULL,
	Cliques INT NOT NULL,
	PRIMARY KEY(IDAnuncio, IDCanal),
	FOREIGN KEY(IDAnuncio) REFERENCES Anuncio(ID) ON DELETE CASCADE,
	FOREIGN KEY(IDCanal) REFERENCES ContaCanal(ID) ON DELETE SET NULL
);




